apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: oauth2-proxy
  name: oauth2-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oauth2-proxy
  template:
    metadata:
      labels:
        app: oauth2-proxy
    spec:
      containers:
      - args:
        - --provider=oidc
        - --email-domain=*
        - --upstream=file:///dev/null
        - --http-address=0.0.0.0:4180
        - --auth-logging=true
        - --request-logging=true
        - --standard-logging=true
        - --cookie-domain=.7f000001.nip.io
        - --whitelist-domain=app1.7f000001.nip.io
        - --whitelist-domain=app2.7f000001.nip.io
        - --set-xauthrequest=true
        - --pass-access-token=true
        - --pass-authorization-header=true
        env:
        - name: OAUTH2_PROXY_OIDC_ISSUER_URL
          valueFrom:
            secretKeyRef:
              name: oauth2-proxy-env
              key: OAUTH2_PROXY_OIDC_ISSUER_URL
        - name: OAUTH2_PROXY_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: oauth2-proxy-env
              key: OAUTH2_PROXY_CLIENT_ID
        - name: OAUTH2_PROXY_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: oauth2-proxy-env
              key: OAUTH2_PROXY_CLIENT_SECRET
        - name: OAUTH2_PROXY_COOKIE_SECRET
          valueFrom:
            secretKeyRef:
              name: oauth2-proxy-env
              key: OAUTH2_PROXY_COOKIE_SECRET
        image: quay.io/oauth2-proxy/oauth2-proxy:latest
        imagePullPolicy: Always
        name: oauth2-proxy
        ports:
        - containerPort: 4180
          protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: oauth2-proxy
spec:
  ports:
    - port: 4180
      protocol: TCP
      targetPort: 4180
  selector:
    app: oauth2-proxy
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    # Do not allow access to /oauth2/auth from outside of the cluster.
    # All access to /oauth2/auth can be done only through the service, i.e. auth.default.svc.cluster.local
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($request_uri ~ "^/oauth2/auth") {
        return 400;
      }
  name: oauth2-proxy
spec:
  ingressClassName: nginx
  rules:
  - host: auth.7f000001.nip.io
    http:
      paths:
      - backend:
          service:
            name: oauth2-proxy
            port:
              number: 4180
        path: /oauth2
        pathType: Prefix
